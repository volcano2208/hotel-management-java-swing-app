/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Entity.Room;
import Entity.TypeRoom;
import Model.DataProcess;
import java.awt.CardLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kakap
 */
public class Layout extends javax.swing.JFrame implements ActionListener{
            private CardLayout card = null;
            private boolean  flag=false;
            private int rooms=0;
            private JButton btn[];
            private String rID="";
           private String datein = "";
           private String dateout = "";
    /**
     * Creates new form NewJFrame
     */
    public Layout() {
        initComponents();
        card=(CardLayout)pnMain.getLayout();
        card.addLayoutComponent(pnRoomManager, "Room Manager");
        card.addLayoutComponent(pnOrderRoom, "Order Room");
        card.addLayoutComponent(pnAddOrder, "add order");
        card.addLayoutComponent(pnAvailableRoom, "available room");
         setEditableForText(false);
        loadData();
        bindingTypeRoom();
        bindingTypeRoom2();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnMain = new javax.swing.JPanel();
        pnOrderRoom = new javax.swing.JPanel();
        pnAddOrder = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblOrder = new javax.swing.JTable();
        txtIDOrder = new javax.swing.JTextField();
        txtCustomer = new javax.swing.JTextField();
        txtDoB = new javax.swing.JTextField();
        txtCard = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        btnAddOrder = new javax.swing.JButton();
        btnUpdateOrder = new javax.swing.JButton();
        btnDeleteOrder = new javax.swing.JButton();
        btnShowListOrder = new javax.swing.JButton();
        pnAvailableRoom = new javax.swing.JPanel();
        btnViewRoom = new javax.swing.JButton();
        cbTyperoom2 = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        pnlist = new javax.swing.JPanel();
        pnRoomManager = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRoom = new javax.swing.JTable();
        cbTyperoom = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnMain.setLayout(new java.awt.CardLayout());

        pnOrderRoom.setLayout(new java.awt.CardLayout());

        jLabel5.setText("ID Order");

        jLabel6.setText("Customer Name");

        jLabel7.setText("Date of Birth");

        jLabel8.setText("Identity Card");

        jLabel9.setText("Phone");

        tblOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID Order", "ID Room", "Customer Name"
            }
        ));
        jScrollPane3.setViewportView(tblOrder);

        btnAddOrder.setText("Add Order");
        btnAddOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddOrderActionPerformed(evt);
            }
        });

        btnUpdateOrder.setText("Update");

        btnDeleteOrder.setText("Delete");

        btnShowListOrder.setText("Show List Order");

        javax.swing.GroupLayout pnAddOrderLayout = new javax.swing.GroupLayout(pnAddOrder);
        pnAddOrder.setLayout(pnAddOrderLayout);
        pnAddOrderLayout.setHorizontalGroup(
            pnAddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAddOrderLayout.createSequentialGroup()
                .addGroup(pnAddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnAddOrderLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(pnAddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(pnAddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtCard)
                            .addComponent(txtDoB)
                            .addComponent(txtIDOrder, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCustomer, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPhone, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddOrder)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdateOrder)
                        .addGap(34, 34, 34)
                        .addComponent(btnDeleteOrder)
                        .addGap(18, 18, 18)
                        .addComponent(btnShowListOrder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE))
                    .addGroup(pnAddOrderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnAddOrderLayout.setVerticalGroup(
            pnAddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAddOrderLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pnAddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtIDOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(pnAddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(pnAddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtDoB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(pnAddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnAddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnAddOrderLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(pnAddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnAddOrderLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnAddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddOrder)
                            .addComponent(btnUpdateOrder)
                            .addComponent(btnDeleteOrder)
                            .addComponent(btnShowListOrder))))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pnOrderRoom.add(pnAddOrder, "card6");

        pnAvailableRoom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnViewRoom.setText("View Room");
        btnViewRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewRoomActionPerformed(evt);
            }
        });

        cbTyperoom2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbTyperoom2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbTyperoom2MouseClicked(evt);
            }
        });
        cbTyperoom2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTyperoom2ActionPerformed(evt);
            }
        });

        jLabel13.setText("Select Date In ");

        jLabel14.setText("Select Date Out");

        jLabel15.setText("Type Room");

        javax.swing.GroupLayout pnlistLayout = new javax.swing.GroupLayout(pnlist);
        pnlist.setLayout(pnlistLayout);
        pnlistLayout.setHorizontalGroup(
            pnlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        pnlistLayout.setVerticalGroup(
            pnlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnAvailableRoomLayout = new javax.swing.GroupLayout(pnAvailableRoom);
        pnAvailableRoom.setLayout(pnAvailableRoomLayout);
        pnAvailableRoomLayout.setHorizontalGroup(
            pnAvailableRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAvailableRoomLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel13)
                .addGap(74, 74, 74)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addGroup(pnAvailableRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbTyperoom2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81)
                .addComponent(btnViewRoom)
                .addContainerGap(111, Short.MAX_VALUE))
            .addGroup(pnAvailableRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnAvailableRoomLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnlist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        pnAvailableRoomLayout.setVerticalGroup(
            pnAvailableRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAvailableRoomLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnAvailableRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnAvailableRoomLayout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(pnAvailableRoomLayout.createSequentialGroup()
                        .addGroup(pnAvailableRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnAvailableRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnViewRoom)
                            .addComponent(cbTyperoom2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(437, Short.MAX_VALUE))
            .addGroup(pnAvailableRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnAvailableRoomLayout.createSequentialGroup()
                    .addGap(0, 208, Short.MAX_VALUE)
                    .addComponent(pnlist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 208, Short.MAX_VALUE)))
        );

        pnOrderRoom.add(pnAvailableRoom, "card3");

        pnMain.add(pnOrderRoom, "card3");

        jLabel1.setText("ID ");

        jLabel3.setText("Price");

        btnAdd.setText("Add New");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel4.setText("Search");

        btnSearch.setText("Enter ID ");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID ", "Price", "ID Type "
            }
        ));
        tblRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRoomMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRoom);

        cbTyperoom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbTyperoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTyperoomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnRoomManagerLayout = new javax.swing.GroupLayout(pnRoomManager);
        pnRoomManager.setLayout(pnRoomManagerLayout);
        pnRoomManagerLayout.setHorizontalGroup(
            pnRoomManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnRoomManagerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnRoomManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnRoomManagerLayout.createSequentialGroup()
                        .addGroup(pnRoomManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(45, 45, 45)
                        .addGroup(pnRoomManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtID, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnRoomManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnRoomManagerLayout.createSequentialGroup()
                                .addGroup(pnRoomManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnRoomManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnRoomManagerLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnSearch))
                                    .addGroup(pnRoomManagerLayout.createSequentialGroup()
                                        .addGap(86, 86, 86)
                                        .addComponent(btnUpdate)
                                        .addGap(94, 94, 94)
                                        .addComponent(btnDelete))))
                            .addComponent(cbTyperoom, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 774, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78))
        );
        pnRoomManagerLayout.setVerticalGroup(
            pnRoomManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnRoomManagerLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(pnRoomManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnRoomManagerLayout.createSequentialGroup()
                        .addGroup(pnRoomManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(pnRoomManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbTyperoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnRoomManagerLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(pnRoomManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete))
                        .addGap(76, 76, 76)
                        .addGroup(pnRoomManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(145, Short.MAX_VALUE))
        );

        pnMain.add(pnRoomManager, "card2");

        getContentPane().add(pnMain, java.awt.BorderLayout.CENTER);

        jMenu1.setText("Functions");

        jMenuItem1.setText("Room Manager");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Order Room");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Exit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        card.show(pnMain,"Room Manager");
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        card.show(pnMain, "Order Room");
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
         if (!flag) {
            setEditableForText(true);
            btnAdd.setText("Save");
        } else {
            String id = txtID.getText();
            String price = txtPrice.getText();
            TypeRoom temp = (TypeRoom) cbTyperoom.getSelectedItem();
            String idd  = temp.getId();
            float result = Float.parseFloat(price);
             DataProcess dt = new DataProcess();
            if (dt.getByID(idd) != null) {
                JOptionPane.showMessageDialog(null, " id room has existed ");
            } else {
                if (dt.addnewRoom(id,  result,idd) == true) {
                    JOptionPane.showMessageDialog(null, "Add new success");
                    loadData();
                     btnAdd.setText("Add New");
                    setEditableForText(false);
                    resetContentText();
                }
            }
        }
        flag = !flag;
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
          DataProcess dt = new DataProcess();
        String id = txtID.getText();
        if (dt.deleteRoom(id)) {
            JOptionPane.showMessageDialog(null, "delete success");
            loadData();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String id = txtID.getText();
        String price = txtPrice.getText();
        float result = Float.parseFloat(price);
        TypeRoom temp = (TypeRoom) cbTyperoom.getSelectedItem();
        String idd  = temp.getId();
        DataProcess dt = new DataProcess();
        if (dt.updateRoom(id, result, idd) == true) {
            JOptionPane.showMessageDialog(null, "Update success");
            loadData();
        }
        txtID.setText("");
        txtPrice.setText("");
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
         String name = txtSearch.getText();
        viewsearch(name);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void cbTyperoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTyperoomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTyperoomActionPerformed

    private void tblRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRoomMouseClicked
        // TODO add your handling code here:
        int row = tblRoom.getSelectedRow();
        String id = tblRoom.getValueAt(row, 0).toString();
        DataProcess dt = new DataProcess();
        Room r= dt.getByID(id);
        txtID.setText(r.getId());
        txtPrice.setEditable(true);
        txtPrice.setEnabled(true);
        txtPrice.setText(r.getPrice()+"");
         
    }//GEN-LAST:event_tblRoomMouseClicked

    private void btnViewRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewRoomActionPerformed
        // TODO add your handling code here:
        DataProcess dt =new DataProcess();
        String TypeRoom = ((TypeRoom)cbTyperoom2.getSelectedItem()).getTypeRoom();
        ArrayList<Room> roomlist = dt.getAvailableRoom( TypeRoom, datein,dateout);
        rooms = roomlist.size();
        int columns = 3;
        int rows = 0;
         btn=new JButton[rooms];
        if((rooms%columns)==0)
        {
           rows = rooms/columns;
        }else
        {
            rows = (rooms/columns) +1;
        }
        GridLayout gridLayout = new GridLayout();
        gridLayout.setColumns(columns);
        gridLayout.setRows(rows);
        pnlist.removeAll();
        pnlist.setLayout(gridLayout);
        int i = 0;
        for(Room room : roomlist)
        {
           btn[i]=new JButton();
            btn[i].setText("Room "+(i+1));
            pnlist.add(btn[i]);
            btn[i].addActionListener(this);
        }
        pnlist.revalidate();      
    }//GEN-LAST:event_btnViewRoomActionPerformed

    private void cbTyperoom2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbTyperoom2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTyperoom2MouseClicked

    private void cbTyperoom2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTyperoom2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTyperoom2ActionPerformed

    private void btnAddOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddOrderActionPerformed
        // TODO add your handling code here:
         DataProcess dt = new DataProcess();
        String orderID = txtIDOrder.getText();
        String customerName = txtCustomer.getText();
        String temp = txtCard.getText();
        int identity = Integer.parseInt(temp);
        String temp2 = txtPhone.getText();
        int phone = Integer.parseInt(temp2);
        String DoB = txtDoB.getText();
        //System.out.println(orderID + " " + roomID + " " + customerName + " " + phoneNumber + " " + (amountOfPeople + 1) + " " + inDate + " " + outDate);
        if (dt.addnewOrder(rID, customerName, dateout, identity, phone))
        {
            JOptionPane.showMessageDialog(null, "Success");
            card.show(pnAddOrder, "add order");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Fail");
        }
    }//GEN-LAST:event_btnAddOrderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Layout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Layout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Layout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Layout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Layout().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddOrder;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeleteOrder;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnShowListOrder;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateOrder;
    private javax.swing.JButton btnViewRoom;
    private javax.swing.JComboBox<String> cbTyperoom;
    private javax.swing.JComboBox<String> cbTyperoom2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel pnAddOrder;
    private javax.swing.JPanel pnAvailableRoom;
    private javax.swing.JPanel pnMain;
    private javax.swing.JPanel pnOrderRoom;
    private javax.swing.JPanel pnRoomManager;
    private javax.swing.JPanel pnlist;
    private javax.swing.JTable tblOrder;
    private javax.swing.JTable tblRoom;
    private javax.swing.JTextField txtCard;
    private javax.swing.JTextField txtCustomer;
    private javax.swing.JTextField txtDoB;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtIDOrder;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    private void setEditableForText(boolean  flag) {
        txtID.setEnabled(flag);
        txtPrice.setEnabled(flag);
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void loadData() {
         DefaultTableModel model = (DefaultTableModel) tblRoom.getModel();
        model.getDataVector().clear();
        DataProcess dt = new DataProcess();
        ArrayList<Room> list = dt.getRoom();
        for (Room r : list) {
            Vector v = new Vector();
            v.addElement(r.getId());
            v.addElement(r.getPrice());
            v.addElement(r.getTyperoom());
            model.addRow(v);
        }
        tblRoom.setModel(model);
    }
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.

    private void resetContentText() {
               txtID.setText("");
            txtPrice.setText("");
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void viewsearch(String name) {
         DefaultTableModel model = (DefaultTableModel) tblRoom.getModel();
        model.getDataVector().clear();
        DataProcess dt = new DataProcess();
        ArrayList<Room> list = dt.searchbyname(name);
        for (Room r : list) {
            Vector v = new Vector();
            v.addElement(r.getId());
            v.addElement(r.getPrice());
            v.addElement(r.getTyperoom());
            model.addRow(v);
        }
        tblRoom.setModel(model);
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void bindingTypeRoom() {
        DataProcess dt =new DataProcess();
        Vector<TypeRoom> v = new Vector<>();
        for(TypeRoom t :dt.getTypeRoom())
        {
            v.add(t);
        }
        cbTyperoom.setModel(new DefaultComboBoxModel(v));
         TypeRoom t=(TypeRoom)cbTyperoom.getSelectedItem();
       // JOptionPane.showMessageDialog(this, t.getId());
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void actionPerformed(ActionEvent e) {      
           for (int i = 0; i < rooms; i++) {
            if(e.getSource()==btn[i])
            {
                rID=btn[i].getText();
                txtID.setText(rID);
                card.show(pnAddOrder, "add order");
            }
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }    
}

    private void bindingTypeRoom2() {
          DataProcess dt =new DataProcess();
        Vector<TypeRoom> v = new Vector<>();
        for(TypeRoom t :dt.getTypeRoom())
        {
            v.add(t);
        }
        cbTyperoom2.setModel(new DefaultComboBoxModel(v));
         TypeRoom t=(TypeRoom)cbTyperoom2.getSelectedItem();
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}

